class Solution {
public:
    double myPow(double x, int n) {
        double ans=1;
        bool neg=false;
        long long temp=n;
        if(n<0){
            temp*=-1;
            neg=true;
        }
        while(temp>0){
            if(temp%2==0){
                x=(x*x);
                temp=temp/2;            
            }
            else{
                ans*=x;
                temp--;
            }
        }
        cout<<ans;
        if(neg){
            ans=1/ans;
        }
        return ans;
    }
};

//logic
//if n is even sqaure x and divide x by 2
//if n is odd multiply current x value to ans and reduce n by 1
// take care of cases when n is negative

//coding ninja question
int ans=1;
    while(n>0){
        if(n&1){    
            ans = (1LL * ans * (x)%m);   
        }    
        x = ( 1LL * (x)%m * (x)%m);           
        n = n>>1;                         
    }
    return ans%m;    