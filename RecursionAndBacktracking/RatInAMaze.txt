void helper(vector<vector<int> > &maze, int i,int j,int n,vector<vector<int>> &ans,vector<vector<int>> &vis){
    if(i<0 or j<0 or i>=n or j>=n or vis[i][j]==1 or maze[i][j]==0){
        return;
    }
    if(i==n-1 and j==n-1){
        vector<int> temp;
        for(int x=0;x<n;x++){
            for(int y=0;y<n;y++){
                temp.push_back(vis[x][y]);
            }
        }
        temp[(n)*(n)-1]=1;
        ans.push_back(temp);      
        return;
    }
    vis[i][j]=1;
    helper(maze,i-1,j,n,ans,vis);
    vis[i][j]=1;
    helper(maze,i+1,j,n,ans,vis);
    vis[i][j]=1;
    helper(maze,i,j-1,n,ans,vis);
    vis[i][j]=1;
    helper(maze,i,j+1,n,ans,vis);
    vis[i][j]=0;
}
vector<vector<int> > ratInAMaze(vector<vector<int> > &maze, int n){
  // Write your code here.
    vector<vector<int>> ans;
    vector<vector<int>> vis(n,vector<int>(n,0));
    helper(maze,0,0,n,ans,vis);
//     reverse(ans.begin(),ans.end());
    return ans;
}