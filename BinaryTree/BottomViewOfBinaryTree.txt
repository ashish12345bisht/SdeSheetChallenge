/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/
vector<int> bottomView(BinaryTreeNode<int> * root){

    // Write your code here.
    vector<int> v;
    map<int,int> m;
    queue<pair<BinaryTreeNode<int> *,int>> q;
    int val=0;
    q.push({root,0});
    while(!q.empty()){
        pair<BinaryTreeNode<int> *,int> temp=q.front();
        q.pop();
        BinaryTreeNode<int> *node=temp.first;
        int line=temp.second;
        m[line]=node->data;
        if(node->left!=NULL){
            q.push({node->left,line-1});
        }
        if(node->right!=NULL){
            q.push({node->right,line+1});
        }
    }
    for(auto i:m){
        v.push_back(i.second);
    }
    return v;
}
