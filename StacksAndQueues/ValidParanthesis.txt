bool isValidParenthesis(string expression)
{
    // Write your code here.
    string s=expression;
    if(s.length()==1)return 0;
        stack<char> st;
        int i=0;
        while(i<s.length()){
            if(s[i]==')' or s[i]=='}' or s[i]==']'){
                // cout<<st.top()<<" "<<s[i]<<endl;
                switch(s[i]){
                    case ')':
                        if(st.empty() or st.top()!='(')return 0;
                        break;
                    case '}':
                        if(st.empty() or st.top()!='{')return 0;
                        break;
                    case ']':
                        if(st.empty() or st.top()!='[')return 0;
                        break;
                }
                st.pop();
            }
            else{
                st.push(s[i]);
            }
            i++;
        }
        if(!st.empty())return 0;
        return 1;
}