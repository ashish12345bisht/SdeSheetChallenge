#include <bits/stdc++.h> 
long long maxSubarraySum(int arr[], int n)
{
    long long sum=0;
    long long maxSum=INT_MIN;
    for(int i=0;i<n;i++){
        sum+=arr[i];
        maxSum=max(maxSum,sum);
        if(sum<0)sum=0;
    }
    return maxSum<0?0:maxSum;
}
//sum is to calculate the sum and maxSum is to store the answer
which is the largest sum of of subarray

just add all numbers of array to sum and is sum get negative put sum=0
maxSum=maximum sum achieved throughout the iteration

this is kadane's algorithm to find the maximum sum of subarray

the last step is done in case there is are all negative numbers in the array
