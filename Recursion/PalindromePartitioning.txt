bool pal(string s,int i,int j){
    while(i<=j){
        if(s[i]!=s[j])return 0;
        i++;
        j--;
    }
    return 1;
}
void helper(int i,string &s,vector<vector<string>> &ans,vector<string> &v){
    if(i==s.length()){
        ans.push_back(v);
        return;
    }
    for(int j=i;j<s.length();j++){
        if(pal(s,i,j)){
            v.push_back(s.substr(i,j-i+1));
            helper(j+1,s,ans,v);
            v.pop_back();
        }
    }
}
vector<vector<string>> partition(string &s) 
{
    // Write your code here.
    vector<vector<string>> ans;
    vector<string> v;
    helper(0,s,ans,v);
    return ans;
}